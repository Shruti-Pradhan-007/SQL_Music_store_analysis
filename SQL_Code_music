/*

Music Store Data Exploration

*/

-- Q1. Find the top 10 countries with highest number of customer engagement.

select COUNT(invoice_id) AS Invoice_count
  , billing_country
from 
	invoice
group by
	billing_country
ORDER BY
	Invoice_count DESC
LIMIT 10;


-- Q2. The company would like to have an event by inviting a pop singer in the city which has the highest sales.

SELECT billing_city AS City
	, ROUND(SUM(total),2) AS Sales
FROM
	invoice
GROUP BY 
	City
ORDER BY
	Sales DESC
LIMIT 1;


-- Q3. The company would like to know the country which has the highest sales.

SELECT billing_country AS Country
	, ROUND(SUM(total),2) AS Sales
FROM
	invoice
GROUP BY 
	Country
ORDER BY
	Sales DESC
LIMIT 1;


-- Q4. The company would like to distribute a special voucher to the top 5 customers in United States.

SELECT customer_id AS Customer_ID
	, ROUND(SUM(total),2) AS Amount_spent
FROM
	invoice
WHERE
	billing_country = 'USA'
GROUP BY 
	Customer_ID
ORDER BY
	Amount_spent DESC
LIMIT 5;


-- Q5. Find the customer who has the highest purchase amount at global level.

SELECT c.customer_id
	, c.first_name
    , c.last_name
    , SUM(i.total) AS Purchase_total
FROM
	customer c
    JOIN invoice i
    ON c.customer_id = i.customer_id
GROUP BY
	c.customer_id
    , c.first_name
    , c.last_name
ORDER BY
	Purchase_total DESC
LIMIT 1;


-- Q6. Write query to return the email, first name, last name, & Genre of all Rock Music listeners. Return your list ordered alphabetically by email starting with A.

SELECT DISTINCT email,first_name, last_name
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
JOIN invoiceline ON invoice.invoice_id = invoiceline.invoice_id
WHERE track_id IN(
	SELECT track_id FROM track
	JOIN genre ON track.genre_id = genre.genre_id
	WHERE genre.name LIKE 'Rock'
)
ORDER BY email;
